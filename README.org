* Scheme-odbc

this is library for chez-scheme connecting to ODBC datasources.
* License
  LGPLv3+
* Usage
** Procedures
*** Procedure: connect
    - Usage:
      - (*connect* /Datasource UID [PWD]/)
      - (*connect* /DSN/)
   
    Create an odbc connect to datasource.
   
    #+BEGIN_SRC scheme
    (import (prefix (odbc dbi) dbi:))
    ;;Procedure connect
    (define c (dbi:connect (getenv "DSN")))
    #+END_SRC

*** Procedure: cursor
    - Usage:
      - (*cursor* /connect/)
   
    Alloc a cursor object, all queries go through cursor.

    #+BEGIN_SRC scheme
    (define cs (dbi:cursor c))
    #+END_SRC

*** Procedure: query
    - Usage: 
      - (*query* /cursor sql/)
   
    Execute query.
   
    #+BEGIN_SRC scheme
    (dbi:query cc "select now()")
    #+END_SRC

*** Procedure: commit, rollback
    - Usage: 
      - (*commit* /connect/)
      - (*rollback* /connect/)

    Commit/Rollback transactions on connection: /connect/

*** Procedure: row-count, number-of-columns, col-defs
    - Usage: 
      - (*row-count* /cursor/)
      - (*number-of-columns* /cursor/)
      - (*col-defs* /cursor/)
   
    col-defs returns: vector of (column-name column-type column-size)

*** Procedure: fetch-one
    - Usage:
      - (*fetch-one* /cursor/)

    Fetches one row from result.
    Returns a vector of values.

*** Procedure: cursor-type-map-proc-set!
    - Usage:
      - (*cursor-type-map-proc-set!* /cursor/ /type-map-def/)

* Copyright
  Chaos Eternal (c) 2016
